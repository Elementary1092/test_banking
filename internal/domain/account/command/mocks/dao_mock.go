// Code generated by MockGen. DO NOT EDIT.
// Source: /home/quark/alif/internal/domain/account/command/dao.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	command "github.com/Elementary1092/test_banking/internal/domain/account/command"
	model "github.com/Elementary1092/test_banking/internal/domain/account/command/model"
	gomock "github.com/golang/mock/gomock"
)

// MockWriteDAO is a mock of WriteDAO interface.
type MockWriteDAO struct {
	ctrl     *gomock.Controller
	recorder *MockWriteDAOMockRecorder
}

// MockWriteDAOMockRecorder is the mock recorder for MockWriteDAO.
type MockWriteDAOMockRecorder struct {
	mock *MockWriteDAO
}

// NewMockWriteDAO creates a new mock instance.
func NewMockWriteDAO(ctrl *gomock.Controller) *MockWriteDAO {
	mock := &MockWriteDAO{ctrl: ctrl}
	mock.recorder = &MockWriteDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWriteDAO) EXPECT() *MockWriteDAOMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockWriteDAO) CreateAccount(ctx context.Context, account *model.Account) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", ctx, account)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockWriteDAOMockRecorder) CreateAccount(ctx, account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockWriteDAO)(nil).CreateAccount), ctx, account)
}

// FindAccount mocks base method.
func (m *MockWriteDAO) FindAccount(ctx context.Context, params map[string]string) (*model.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAccount", ctx, params)
	ret0, _ := ret[0].(*model.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAccount indicates an expected call of FindAccount.
func (mr *MockWriteDAOMockRecorder) FindAccount(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAccount", reflect.TypeOf((*MockWriteDAO)(nil).FindAccount), ctx, params)
}

// UpdateAccount mocks base method.
func (m *MockWriteDAO) UpdateAccount(ctx context.Context, updateReq *model.UpdateAccount, t command.UpdateType) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAccount", ctx, updateReq, t)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAccount indicates an expected call of UpdateAccount.
func (mr *MockWriteDAOMockRecorder) UpdateAccount(ctx, updateReq, t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAccount", reflect.TypeOf((*MockWriteDAO)(nil).UpdateAccount), ctx, updateReq, t)
}
